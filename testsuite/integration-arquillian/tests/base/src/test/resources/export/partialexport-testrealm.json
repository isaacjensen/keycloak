{
  "id": "partial-export-test",
  "realm": "partial-export-test",

  "roles": {
    "realm": [
      {
        "name": "sample-realm-role",
        "description": "Sample realm role",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "realm-composite-role",
        "description": "Realm composite role containing client role",
        "scopeParamRequired": false,
        "composite": true,
        "composites": {
          "realm": [
            "sample-realm-role"
          ],
          "client": {
            "test-app": [
              "sample-client-role"
            ],
            "account": [
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "customer-user-premium",
        "description": "Have User Premium privileges",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "admin",
        "description": "Have Administrator privileges",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      },
      {
        "name": "user",
        "description": "Have User privileges",
        "scopeParamRequired": false,
        "composite": false,
        "clientRole": false,
        "containerId": "test"
      }
    ],
    "client": {
      "test-app": [
        {
          "name": "customer-admin",
          "description": "Have Customer Admin privileges",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        },
        {
          "name": "sample-client-role",
          "description": "Sample client role",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        },
        {
          "name": "customer-admin-composite-role",
          "description": "Have Customer Admin privileges via composite role",
          "scopeParamRequired": false,
          "composite": true,
          "composites": {
            "realm": [
              "customer-user-premium"
            ],
            "client": {
              "test-app": [
                "customer-admin"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        },
        {
          "name": "customer-user",
          "description": "Have Customer User privileges",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "c1a37c9e-6ba4-4d77-988d-ab11462d5668"
        }
      ],
      "test-app-scope": [
        {
          "name": "test-app-disallowed-by-scope",
          "description": "Role disallowed by scope in test-app-scope",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "f3ff0b0d-e922-4874-a34c-cdfa1b3305fe"
        },
        {
          "name": "test-app-allowed-by-scope",
          "description": "Role allowed by scope in test-app-scope",
          "scopeParamRequired": false,
          "composite": false,
          "clientRole": true,
          "containerId": "f3ff0b0d-e922-4874-a34c-cdfa1b3305fe"
        }
      ],
      "test-app-service-account": [
        {
          "name": "test-app-service-account",
          "description": "test-app-service-account",
          "composite": false,
          "clientRole": true,
          "containerId": "9f39a1b4-8ca1-45e1-943d-9149c5bdcca4",
          "attributes": {}
        },
        {
          "name": "test-app-service-account-child",
          "description": "test-app-service-account-child",
          "composite": false,
          "clientRole": true,
          "containerId": "9f39a1b4-8ca1-45e1-943d-9149c5bdcca4",
          "attributes": {}
        },
        {
          "name": "test-app-service-account-parent",
          "description": "test-app-service-account-parent",
          "composite": true,
          "composites": {
            "client": {
              "test-app-service-account": [
                "test-app-service-account-child"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9f39a1b4-8ca1-45e1-943d-9149c5bdcca4",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "name": "roleRichGroup",
      "path": "/roleRichGroup",
      "attributes": {
        "topAttribute": [
          "true"
        ]
      },
      "realmRoles": [
        "realm-composite-role",
        "user"
      ],
      "clientRoles": {
        "account": [
          "manage-account"
        ]
      },
      "subGroups": [
        {
          "name": "level2group",
          "path": "/roleRichGroup/level2group",
          "attributes": {
            "level2Attribute": [
              "true"
            ]
          },
          "realmRoles": [
            "admin"
          ],
          "clientRoles": {
            "test-app": [
              "customer-admin-composite-role",
              "customer-user"
            ]
          },
          "subGroups": []
        }
      ]
    },
    {
      "name": "topGroup",
      "path": "/topGroup",
      "attributes": {
        "topAttribute": [
          "true"
        ]
      },
      "realmRoles": [
        "user"
      ],
      "clientRoles": {},
      "subGroups": [
        {
          "name": "level2group",
          "path": "/topGroup/level2group",
          "attributes": {
            "level2Attribute": [
              "true"
            ]
          },
          "realmRoles": [
            "admin"
          ],
          "clientRoles": {
            "test-app": [
              "customer-user"
            ]
          },
          "subGroups": []
        }
      ]
    }
  ],
  "defaultRoles": [
    "user",
    "offline_access",
    "uma_authorization"
  ],
  "smtpServer": {
    "from": "auto@keycloak.org",
    "host": "localhost",
    "port": "3025",
    "user": "user",
    "password": "secret"
  },
  "users": [
    {
      "username" : "bburke",
      "enabled": true,
      "email" : "bburke@redhat.com",
      "credentials" : [
        {
          "type" : "password",
          "value" : "password"
        }
      ],
      "attributes" : {
        "phone": "617"
      },
      "realmRoles": [
        "user"
      ],
      "applicationRoles": {
        "test-app": [
          "sample-client-role"
        ]
      }
    },
    {
      "username": "service-account-test-app-service-account",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "email": "service-account-test-app-service-account@placeholder.org",
      "serviceAccountClientId": "test-app-service-account",
      "credentials" : [
        {
          "type" : "password",
          "value" : "password"
        }
      ],
      "realmRoles": [
        "uma_authorization",
        "user",
        "offline_access"
      ],
      "clientRoles": {
        "test-app-service-account": [
          "test-app-service-account",
          "test-app-service-account-parent"
        ],
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "client": "test-app",
      "roles": [
        "user"
      ]
    },
    {
      "client": "test-app-scope",
      "roles": [
        "admin",
        "user"
      ]
    },
    {
      "client": "third-party",
      "roles": [
        "user"
      ]
    }
  ],
  "clientScopeMappings": {
    "realm-management": [
      {
        "client": "admin-cli",
        "roles": [
          "realm-admin"
        ]
      },
      {
        "client": "security-admin-console",
        "roles": [
          "realm-admin"
        ]
      }
    ],
    "test-app": [
      {
        "client": "test-app-scope",
        "roles": [
          "customer-admin-composite-role"
        ]
      },
      {
        "client": "third-party",
        "roles": [
          "customer-user"
        ]
      }
    ],
    "test-app-scope": [
      {
        "client": "test-app-scope",
        "roles": [
          "test-app-allowed-by-scope"
        ]
      }
    ]
  },
  "clients": [
    {
      "clientId": "test-app",
      "adminUrl": "http://localhost:8180/auth/realms/master/app/admin",
      "baseUrl": "http://localhost:8180/auth/realms/master/app/auth",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app/auth/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": true,
          "consentText": "${fullName}",
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${email}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${username}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${givenName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${familyName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ],
      "useTemplateConfig": false,
      "useTemplateScope": false,
      "useTemplateMappers": false
    },
    {
      "clientId": "test-app-scope",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${email}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": true,
          "consentText": "${fullName}",
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${username}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${familyName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${givenName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ],
      "useTemplateConfig": false,
      "useTemplateScope": false,
      "useTemplateMappers": false
    },
    {
      "clientId": "third-party",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${familyName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${email}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${username}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": true,
          "consentText": "${givenName}",
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": true,
          "consentText": "${fullName}",
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ],
      "useTemplateConfig": false,
      "useTemplateScope": false,
      "useTemplateMappers": false
    },
    {
      "clientId": "test-app-service-account",
      "rootUrl": "http://localhost:8180/auth/realms/master/app-service-account",
      "adminUrl": "http://localhost:8180/auth/realms/master/app-service-account",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "redirectUris": [
        "http://localhost:8180/auth/realms/master/app-service-account/*"
      ],
      "webOrigins": [
        "http://localhost:8180"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "rsa",
        "providerId": "rsa",
        "subComponents": {},
        "config": {
          "privateKey": [
            "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"
          ],
          "certificate": [
            "MIIElzCCAn8CBgFbn2yzLjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTE3MDQyNDEwMDQxMloXDTI3MDQyNDEwMDU1MlowDzENMAsGA1UEAwwEdGVzdDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJH0xsaG80td9g8BgwuzA4DdPHVdEfKjdX7J+jxjI1IaOIzQx/xIuzh9SB2JdfFxfQSvJ4tonix35H66E0YNpQj+b0CZI4D/HNPc4njxAeJXS/kSJBlVJIsh4nKrMLrY/8GqAi5ovNlONvacx16w+0xEPTHrp4/q1/lcAET0I9SP4KDzUhHsOourZtRYmLWek/LKSvq+i39i42hcTbI5adfzm2iLS434Le4vtTAUSOj7v1oe7zAbPHKZr1LcoqkML4GkBF+y17VTDLiy3isKVkTv6WRJHIUw4JJi9+Yik7I1xJ77iQW84hlA5iJAnF5hSH6u36AHMWWaq61zdvtUZkHS/L57bnpIlXP7076gaeQsIE6iY8Ej3NzWKrBbXE082kiMEKOZ/XCCilITv+eGAFp1pqamECaREwSUwVMcJYp88R0XI/zpXEMCEiKdwRR+R9eNuiq1dL0S4JMz/28Jzr6wkSpREcBPgcrLfCThcNZZv9+uFqxxbRxKxL0rW5aKGyx9ykcTk1RupoeeGZlxBKZ33w8thG+uS1Wecde+GlUK1/mz4mH6rdYKxiR13kO6I3JIg2EydIHTyJ6kMlq36wCONocfwJ6xfc0ZfWb91hsNckbQgY8+7Q0BVUf6MhpnXn9GHyLk945MRczWhmzEuw6bua9cvJRgwanMT3ojost7AgMBAAEwDQYJKoZIhvcNAQELBQADggIBAFoDDiuH4h0HUVz4LPc7Mg5iqPr/qmPeikIMoNrk0ITGMgqILqlAm0ZUPaykcgZjwl/8eEOzQd27ODuri6wAtQkiUywZOzvrmNoTnf9RU81tKU5poAz7LK6y6beBO8ZGEDuJ/z5Qt5AT1e6CsZlVvQ7g7/ybsFyz62eYxm1rthJit70rFLkJRpI61WqfZe7fI5Q6Zk4F851gyWpYXt3lmGAyMmy8k5haHzstadOItD5OEHoy9ark+XbFij2IxL3I5zMaHRZAKGyNpCWKupJ93BUSixaac2do0K7kt/yDsxZJRKiTtX+Zlsut8pQ21nv1BsMcbMzCV7b/q7Pzb+CF69WvQvXfKlJSNRjVks0adMQPVn8HzT/1+oPzLCqqhGcPE8xwqe8j9yuGzFc6gFoMXqSEQwIwaQtHWXrzrIMtQGUYUDNXK02ZzgQcZgYLoPC/UvVTUvXGJVsSAoKorN3oNSOydnQ59iv2mvMXjE+edIU3QRC2UYJWM913kOD9cqbq7uzSuDCp/e6T0g9Psx5KmR0BZ/pZqq59XpxL+2K7WFXGx9y7XrpBiIuYDqRUD1aLcAvJ5jrc+mUe4+iPV/2BrNJoDpPd2x02dSmmTSKZymWwsubMBgCTu6Fviuip7C9+U0t/ZU9FzD+Rwv56M8m5Y4sSOojm+wW7epV+ps1qLxJ/"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "name": "ldap-apacheds",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "uid"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            },
            {
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "cn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              }
            },
            {
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            },
            {
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "createTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              }
            },
            {
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "modifyTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              }
            },
            {
              "name": "postal code",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "postalCode"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "postal_code"
                ]
              }
            },
            {
              "name": "street",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "street"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "street"
                ]
              }
            },
            {
              "name": "picture",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "ldap.attribute": [
                  "jpegPhoto"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "is.binary.attribute": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "picture"
                ]
              }
            },
            {
              "name": "realm roles",
              "providerId": "role-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "mode": [
                  "LDAP_ONLY"
                ],
                "roles.dn": [
                  "ou=RealmRoles,dc=keycloak,dc=org"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "role.name.ldap.attribute": [
                  "cn"
                ],
                "use.realm.roles.mapping": [
                  "true"
                ],
                "role.object.classes": [
                  "groupOfNames"
                ]
              }
            },
            {
              "name": "finance roles",
              "providerId": "role-ldap-mapper",
              "subComponents": {

              },
              "config": {
                "mode": [
                  "LDAP_ONLY"
                ],
                "roles.dn": [
                  "ou=FinanceRoles,dc=keycloak,dc=org"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "role.name.ldap.attribute": [
                  "cn"
                ],
                "use.realm.roles.mapping": [
                  "false"
                ],
                "role.object.classes": [
                  "groupOfNames"
                ],
                "client.id": [
                  "finance"
                ]
              }
            }
          ]
        },
        "config": {
          "fullSyncPeriod": [
            "-1"
          ],
          "pagination": [
            "true"
          ],
          "debug": [
            "false"
          ],
          "searchScope": [
            "1"
          ],
          "connectionPooling": [
            "true"
          ],
          "usersDn": [
            "ou=People,dc=keycloak,dc=org"
          ],
          "priority": [
            "1"
          ],
          "userObjectClasses": [
            "inetOrgPerson, organizationalPerson"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "usernameLDAPAttribute": [
            "uid"
          ],
          "bindDn": [
            "uid=admin,ou=system"
          ],
          "bindCredential": [
            "secret"
          ],
          "rdnLDAPAttribute": [
            "uid"
          ],
          "lastSync": [
            "0"
          ],
          "vendor": [
            "other"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "uuidLDAPAttribute": [
            "entryUUID"
          ],
          "connectionUrl": [
            "ldap://localhost:10389"
          ],
          "syncRegistrations": [
            "true"
          ],
          "authType": [
            "simple"
          ]
        }
      }
    ]
  },
  "identityProviders" : [
    {
      "providerId" : "google",
      "alias" : "google1",
      "enabled": true,
      "config": {
        "syncMode": "IMPORT",
        "clientId": "googleId",
        "clientSecret": "googleSecret"
      }
    }
  ]
}
